#!/bin/sh
#-
# Copyright (c) 2011 Nathan Whitehorn
# All rights reserved.
# Copyright (c) 2011 The FreeBSD Foundation
# All rights reserved.
#
# Portions of this software were developed by Bjoern Zeeb
# under sponsorship from the FreeBSD Foundation.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $FreeBSD: release/10.0.0/usr.sbin/bsdinstall/scripts/netconfig 256361 2013-10-11 23:12:05Z dteske $

INTERFACES=""
DIALOG_TAGS=""

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

#
# Auto install
#
AUTO_INSTALL=$2

IFS="="
while read -r name value
do
	eval $name=\$value
done < /etc/auto_install_config
IFS=$' \t\n'


#
# HA INSTALL
#
DNS_ONLY=$1
test -z "$DNS_ONLY" && DNS_ONLY=0


# Do a dirty check to see if this a wireless interface -- there should be a
# better way
is_wireless_if() {
	ifconfig $1 | grep -q 'media: IEEE 802.11 Wireless'
}


IPV4_AVAIL=0
sysctl -N kern.features.inet > /dev/null 2>&1
case $? in
0)	IPV4_AVAIL=1 ;;
esac


if [ $DNS_ONLY -eq 0 -o $DNS_ONLY -eq 2 ]; then
   for IF in `ifconfig -l`; do
      test "$IF" = "lo0" && continue
      (ifconfig -g wlan | egrep -wq $IF) && continue
      INTERFACES="$INTERFACES $IF"
      DESC=`sysctl -n dev.$(echo $IF | sed -E 's/([[:alpha:]]*)([[:digit:]]*)/\1.\2/g').%desc`
      is_wireless_if $IF && echo $DESC |
         grep -iqv wireless && DESC="Wireless $DESC"
      DIALOG_TAGS="$DIALOG_TAGS $IF \"$DESC\""
   done

   if [ -z "$INTERFACES" -o $((`echo "$INTERFACES" | sed 's/^ //g' | wc -w`)) -lt 1 ]; then
      dialog --backtitle 'FreeBSD Installer' \
         --title 'Network Configuration Error' \
         --msgbox 'At least 1 network interface is required to continue.' 0 0
      exit 1
   fi

   : > $BSDINSTALL_TMPETC/._hosts
   STATUS=0
   exec 3>&1
   MESSAGE="Please select a network interface to configure:"

   INTERFACE=`echo $DIALOG_TAGS | xargs dialog --backtitle 'FreeBSD Installer' --title 'Network Configuration' --menu "$MESSAGE" 0 0 0 2>&1 1>&3`
   STATUS=$?
   [ $STATUS -eq $DIALOG_CANCEL -o $STATUS -eq $DIALOG_ESC ] && continue
   exec 3>&-

   : > $BSDINSTALL_TMPETC/._rc.conf.net

   IFCONFIG_PREFIX=""
   if is_wireless_if $INTERFACE; then
           NEXT_WLAN_IFACE=wlan0	# XXX
           echo wlans_$INTERFACE=\"$NEXT_WLAN_IFACE\" >> $BSDINSTALL_TMPETC/._rc.conf.net
           IFCONFIG_PREFIX="WPA "
           if [ ! -z $BSDINSTALL_CONFIGCURRENT ]; then
                   ifconfig $NEXT_WLAN_IFACE create wlandev $INTERFACE
                   ifconfig $NEXT_WLAN_IFACE up
           fi
           bsdinstall wlanconfig $NEXT_WLAN_IFACE || exec $0
           INTERFACE="$NEXT_WLAN_IFACE"
   fi

   if [ ${IPV4_AVAIL} -eq 1 ]; then
           bsdinstall netconfig_ipv4 ${INTERFACE} "${IFCONFIG_PREFIX}" || \
           exec $0
   fi
   # In case wlanconfig left an option and we do not support IPv4 we need to write
   # it out on its own.  We cannot write it out with IPv6 as that suffix.
   if [ ${IPV4_AVAIL} -eq 0 -a -n ${IFCONFIG_PREFIX} ]; then
           echo ifconfig_${INTERFACE}=\"${IFCONFIG_PREFIX}\" >> $BSDINSTALL_TMPETC/._rc.conf.net
   fi

   cat $BSDINSTALL_TMPETC/._rc.conf.net >> $BSDINSTALL_TMPETC/rc.conf.net
fi

if [ $DNS_ONLY -eq 0 -o $DNS_ONLY -eq 1 ]; then
   HOST_NAME=`awk -F\" '/^hostname=".*"/ { print $2 }' ${BSDINSTALL_TMPETC}/rc.conf.hostname`
   HOST_NAME_SHORT=`echo "$HOST_NAME" | sed 's/\..*//g'`
   DOMAIN=`echo "$HOST_NAME" | cut -d . -s -f2-`
   [ -z "$DOMAIN" ] && DOMAIN=`echo ${RESOLV} | awk '{print $1}'`
   (
      echo "::1         localhost localhost.${DOMAIN}"
      echo "127.0.0.1   localhost localhost.${DOMAIN}"
   ) > ${BSDINSTALL_TMPETC}/hosts

   # XXX Create generic /etc/hosts file as sysinstall did.
   # Allows gethostbyname() and apache to work without DNS
   for IF in `ifconfig -l`; do
      test "$IF" = "lo0" && continue
      (ifconfig -g wlan | egrep -wq $IF) && continue

      IP_ADDR=`awk '/^ifconfig_'${IF}'=".*"/ { print $2 }' ${BSDINSTALL_TMPETC}/._rc.conf.net`
      MASK=`awk '/^ifconfig_'${IF}'=".*"/ { print $4 }' ${BSDINSTALL_TMPETC}/._rc.conf.net | sed 's/"//g'`

      (
         if [ -n "${IP_ADDR}" -a -n "${HOST_NAME}" ]; then
            echo "${IP_ADDR}  ${HOST_NAME_SHORT}.${DOMAIN}  ${HOST_NAME_SHORT}"
            echo "${IP_ADDR}  ${HOST_NAME_SHORT}.${DOMAIN}."
         fi
      ) >> ${BSDINSTALL_TMPETC}/._hosts
   done

   cat $BSDINSTALL_TMPETC/._hosts >> $BSDINSTALL_TMPETC/hosts


   SEARCH=""
   IP4_1=""
   IP4_2=""
   while read key value; do
      case "${key}" in
      search)		SEARCH="${value}" ;;
      nameserver)	# is more trick as we have to distinguish v4 and v6
         case "${value}" in
         [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*)
            if [ -z "${IP4_1}" ] ; then
               IP4_1="${value}"
            elif [ -z "${IP4_2}" ]; then
               IP4_2="${value}"
            fi
            ;;
         esac
         ;;
      # ignore others
      esac
   done < ${BSDINSTALL_TMPETC}/resolv.conf


   #
   # Configure DNS
   #
   RESOLV=""
   if [ ${IPV4_AVAIL} -eq 1 ]; then
      RESOLV="
          'Domain' 1 0 \"${SEARCH}\" 1 16 50 0 0
          'Nameserver' 2 0 \"Nameserver\" 2 16 50 0 2
          'IPv4 DNS #1' 2 0 \"${IP4_1}\" 2 16 16 0 0
          'IPv4 DNS #2' 3 0 \"${IP4_2}\" 3 16 16 0 0"
   else
      exit 0
   fi

   exec 3>&1
   RESOLV=$(echo "${RESOLV}" | xargs dialog --backtitle 'FreeBSD Installer' \
           --title 'Network Configuration' \
           --mixedform 'Resolver Configuration' 0 0 0 \
   2>&1 1>&3)
   if [ $? -eq $DIALOG_CANCEL ]; then exec $0; fi
   exec 3>&-

   echo ${RESOLV} | tr ' ' '\n' | \
   awk '
   BEGIN {
           search=-1;
   }
   {
           if (/^[[:space:]]+$/) {
                   next;
           }
           if (/^Nameserver$/) {
                   printf "\n";
                   search=0;
                   next;
           }
           if (search == -1) {
                   printf "search ";
                   search=1;
           }
           if (search > 0) {
                   printf "%s%s", (search > 1) ? " " : "", $1;
                   search++;
                   next;
           }
           printf "nameserver %s\n", $1;
   }' > ${BSDINSTALL_TMPETC}/resolv.conf

fi

